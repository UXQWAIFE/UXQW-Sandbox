/*----------- A ajouter selon moi aux boutons--------- */
/* Cas d'usage : en responsive dans le bandeau de module de filtre le boutton s'élargie en hauteur */

.rcn-button{
    height: fit-content;
}

/*----------- Module de filtre--------- */

.rcn-filter__activeItems{
    display: flex;
    flex-direction: column;
    gap:var(--rcn-semantic-gap-vertical-400);
}

.rcn-filter__chipsZone{

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--rcn-semantic-gap-vertical-200) var(--rcn-semantic-gap-horizontal-200);
}

.rcn-filter{
    display: flex;
    flex-direction: column;
    gap:var(--rcn-semantic-gap-vertical-500);
    padding : var(--rcn-semantic-padding-vertical-400) var(--rcn-semantic-padding-horizontal-600);
    border-left: var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_strong);
    border-right: var(--rcn-semantic-borderwidth-100) solid transparent;
    background-color: var(--rcn-semantic-color-interaction-background-default-standard);
    width: 100%;
    /* grid-area : filter;  > si mise au sein d'une grille sans overlay */
   }

   .rcn-filter--leftZone{
    border-left:none;
    border-right : var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_strong);
   
   }

   .rcn-filterPartiel__zone{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    border-top: var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_regular);
    border-right: none;
    border-left : none;
    border-bottom : var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_regular);
    padding : var(--rcn-semantic-padding-vertical-400) var(--rcn-semantic-padding-horizontal-0);
   }

 

   .rcn-filter__button{
    order:-1;
   }

   .rcn-filter__button::before{
    content:var(--rcn-semantic-typography-icon-rcn_icon-filter-content);

   }

   .rcn-filter_link{
    display: flex;
    align-self:flex-end;
   }

   .rcn-filter__separator{
    height: var(--rcn-semantic-borderwidth-100);
    background-color: var(--rcn-semantic-color-static-border-divider_regular);
    width : auto;
   }

   .rcn-filter_criteriaZone{
    display: flex;
    flex-direction: column;
    gap: var(--rcn-semantic-gap-vertical-500);
   }

   .rcn-filter__closeButton{
    display:flex;
    flex-direction: row;
    align-items: baseline;
    gap: var(--rcn-semantic-gap-horizontal-200);
    align-self : flex-end;
    /* Definir si ces propriétés sont portées au sein du reset ou non */
    background: none;
    border:none;

   }

   .rcn-filter__icon::before{
    content: var(--rcn-semantic-typography-icon-rcn_icon-close-content);
  }

  .rcn-filter__icon{
   order:2;

  }

   /*Modifier au module de filtre lorsqu'il se supperpose au contenu de la page*/

   .rcn-grid--mainContentOverlayed{
    position : relative;
  }

  .rcn-filter--overlay{
    grid-area: filter;
    overflow: auto;
    border-right:var(--rcn-semantic-borderwidth-100) solid transparent;
    border-left : var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_strong);
   }

   .rcn-filter--overlayLeft{
    border-left:var(--rcn-semantic-borderwidth-100) solid transparent;
    border-right:var(--rcn-semantic-borderwidth-100) solid var(--rcn-semantic-color-static-border-divider_strong);
   }

  .rcn-grid--sideOverlayFilterTemplate {
    position:absolute;
    top:0;
    left:0;
    display: grid;
    grid-template-areas: "filter filter filter fiter . . . . . . . .";
    overflow: auto;
    margin: 0;
    
  }